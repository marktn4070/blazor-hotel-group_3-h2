@page "/hotel/{hotelId:int}/room/{roomId:int}"
@using DomainModels
@inject Blazor.Services.APIService ApiService
@using System.Net.Http

<PageTitle>Suite Dreams - Room</PageTitle>
@if (room == null)
{
	<p><em>Loading room...</em></p>
}
else if (room.Length == 0)
{
	<div class="alert alert-info">No room found.</div>
}
else
{
<div class="room_page">
	<div class="row justify-content-center">

		@foreach (var r in room)
			{
				<!-- Responsive kolonne -->
				<div class="col-12 col-sm-6 col-md-4 col-lg-3 mb-4 d-flex">
					<!-- Card -->
					<div class="card w-100 h-100">
						<div class="card-body border-bottom row row-cols-1 row-cols-sm-2 gy-1 text-nowrap">
							<div class="fw-bold mb-2">@r.RoomNumber</div>
							<div class="col text-end">
							</div>
						</div>

						<div class="card-body">
							<span class="mx-1"></span>
							<div class="col text-center">
							<div class="active text-alert fw-semibold me-1"></div>
						</div>
					</div>
				</div>
			</div>
			}
	</div>
</div>
}

@code {
	[Parameter]
	public int hotelId { get; set; }

	[Parameter]
	public int roomId { get; set; }
	
	private RoomGetDto[]? room;

	protected override async Task OnInitializedAsync()
	{
		try
		{
			room = await ApiService.GetRoomAsync(roomId);
		}
		catch (Exception ex)
		{
			Console.WriteLine($"Fejl ved hentning rum med id'et {roomId}: {ex.Message}", roomId);
			room = Array.Empty<RoomGetDto>();
		}
	}
}
