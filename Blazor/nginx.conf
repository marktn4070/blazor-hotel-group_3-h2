events { }
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Add MIME types for Blazor WASM
    types {
        application/wasm wasm;
        application/javascript js;
        text/javascript js;
        text/css css;
        text/html html htm;
        image/png png;
        image/jpeg jpg jpeg;
        image/gif gif;
        image/svg+xml svg;
        application/json json;
        text/plain txt;
        application/manifest+json webmanifest;
    }

    server {
        listen 80;

        # Blazor WASM specific files
        location ~* \.wasm$ {
            root      /usr/share/nginx/html;
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;
            add_header Content-Type "application/wasm";
            try_files $uri $uri/ /index.html =404;
        }

        # Blazor framework files
        location /_framework/ {
            root      /usr/share/nginx/html;
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;
            try_files $uri $uri/ /index.html =404;
        }

        # JavaScript files (including modules)
        location ~* \.js$ {
            root      /usr/share/nginx/html;
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;
            add_header Content-Type "application/javascript";
            try_files $uri $uri/ /index.html =404;
        }

        # Service Worker
        location = /service-worker.js {
            root      /usr/share/nginx/html;
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;
            add_header Content-Type "application/javascript";
            try_files $uri =404;
        }

        # Manifest file
        location = /manifest.webmanifest {
            root      /usr/share/nginx/html;
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;
            add_header Content-Type "application/manifest+json";
            try_files $uri =404;
        }

        # Disable caching for HTML files
        location ~* \.html$ {
            root      /usr/share/nginx/html;
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;
            add_header Content-Type "text/html";
            try_files $uri $uri/ /index.html =404;
        }

        # Disable caching for CSS files
        location ~* \.css$ {
            root      /usr/share/nginx/html;
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;
            add_header Content-Type "text/css";
            try_files $uri $uri/ /index.html =404;
        }

        # Allow caching for static assets (images, fonts, etc.)
        location ~* \.(png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            root      /usr/share/nginx/html;
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri $uri/ /index.html =404;
        }

        # Default location with no caching
        location / {
            root      /usr/share/nginx/html;
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;
            try_files $uri $uri/ /index.html =404;
        }
    }
} 